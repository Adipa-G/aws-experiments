version: 0.2

env:
  exported-variables:
    - CODEBUILD_BUILD_NUMBER

phases:
  pre_build:
    commands:
      - echo ${AWS_ACCOUNT_ID}
      - echo ${AWS_REGION}
      - echo ${CODEBUILD_BUILD_NUMBER}
      - echo ${CODEBUILD_SRC_DIR}
      - echo ${IMAGE_REPO_NAME}
      - echo ${ENV_OUTPUT_BUCKET}
      
      - apt-get upgrade
      - apt-get update

  build:
    commands:

      - docker build ./grails-app-docker-code-pipeline-example -t ${IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}
      - docker build ./grails-app-docker-code-pipeline-example --target export-test-results --output type=local,dest=${CODEBUILD_SRC_DIR}/test-results
      - docker tag ${IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}

      - aws s3 cp ./grails-app-docker-code-pipeline-example/cloud.env s3://${ENV_OUTPUT_BUCKET}/env/cloud_${CODEBUILD_BUILD_NUMBER}.env

  post_build:
    commands:
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${CODEBUILD_BUILD_NUMBER}

reports:
  junit-report:
    files:
      - '${CODEBUILD_SRC_DIR}/test-results/TESTS-TestSuites.xml'
    file-format: 'JUNITXML'

artifacts:    
  files:
    - ./grails-app-docker-code-pipeline-example/cloudformationtemplates/template-private-subnet.yaml
    - ./grails-app-docker-code-pipeline-example/codepipeline/pipeline-stack.yaml